////////////////////////////////////////////////-SIMPLE CLASS/////////////////////////////////////////////////////////////////

`include "uvm_macros.svh"
import uvm_pkg::*;
 
class transaction extends uvm_object;
  `uvm_object_utils(transaction)
 
  function new(string path = "transaction");
    super.new(path);
  endfunction
  
  rand bit [3:0] a;
  
endclass
 
module tb;
  transaction th;
  
  initial begin
    th = new("transaction");
    th.randomize();
    `uvm_info("TB_TOP", $sformatf("Value of a : %0d", th.a), UVM_NONE);
  end
  
endmodule

/////////////////////////////////////////////////-USING FIELD MACROS-////////////////////////////////////////////////////////////////

`include "uvm_macros.svh"
import uvm_pkg::*;
 
class transaction extends uvm_object;
    `uvm_object_utils_begin(transaction)
    `uvm_field_int(a,UVM_DEFAULT)
    `uvm_object_utils_end
    
  function new(string path = "transaction");
    super.new(path);
  endfunction
  
  rand bit [3:0] a;
  
endclass
 
module tb;
 transaction th;
  
  initial begin
    th = new("transaction");
    th.randomize();
    `uvm_info("TB_TOP", $sformatf("Value of a : %0d", th.a), UVM_NONE);
  end
  
endmodule

//////////////////////////////////////////////////-uvm_printer METHODS-///////////////////////////////////////////////////////////////////

`include "uvm_macros.svh"
import uvm_pkg::*;
 
class transaction extends uvm_object;
//  `uvm_object_utils( transaction)
 
  function new(string path = " transaction");
    super.new(path);
  endfunction
  
  rand bit [3:0] a;
  rand bit [7:0] b;
 
  `uvm_object_utils_begin( transaction)
  `uvm_field_int(a, UVM_NOPRINT | UVM_BIN);
  `uvm_field_int(b, UVM_DEFAULT | UVM_DEC);
  `uvm_object_utils_end
 
  
endclass
 
module tb;
   transaction th;
  
  initial begin
    th = new(" transaction");
    th.randomize();
    th.print(uvm_default_table_printer);
  end
  
endmodule
      
///////////////////////////////////////////-OTHER FIELD MACROS-////////////////////////////////////////////////////////////

`include "uvm_macros.svh"
import uvm_pkg::*;
 
 
 
class transaction extends uvm_object;
//  `uvm_object_utils(transaction)
  
  typedef enum bit [1:0] {s0 , s1, s2, s3} state_type;
  rand state_type state;
  
  real temp = 12.34;
  string str = "UVM";
 
  function new(string path = "transaction");
    super.new(path);
  endfunction
  
 
  `uvm_object_utils_begin(transaction)
  `uvm_field_enum(state_type, state, UVM_DEFAULT);
  `uvm_field_string(str,UVM_DEFAULT);
  `uvm_field_real(temp, UVM_DEFAULT);
  `uvm_object_utils_end
 
  
endclass
 
module tb;
  transaction th;
  
  initial begin
    th = new("transaction");
    th.randomize();
    th.print(uvm_default_table_printer);
  end
  
endmodule

/////////////////////////////////////////////-MACROS FOR CLASS INSTANCE-/////////////////////////////////////////////////////////

`include "uvm_macros.svh"
import uvm_pkg::*;
 
class parent extends uvm_object;
  
  function new(string path = "parent");
    super.new(path);
  endfunction 
  
  rand bit [3:0] data;
  
  `uvm_object_utils_begin(parent)
  `uvm_field_int(data,UVM_DEFAULT);
  `uvm_object_utils_end
  
  
endclass
 
class child extends uvm_object;
  
   parent p;
  
  function new(string path = "child");
    super.new(path);
    p = new("parent");
  endfunction 
  
  `uvm_object_utils_begin(child)
  `uvm_field_object(p,UVM_DEFAULT);
  `uvm_object_utils_end
  
endclass
 
module tb;
  child c;
  
  initial begin
    c = new("child");
    c.p.randomize();
    c.print();
  end
  
endmodule
///////////////////////////////////////////-FIELD ARRAY MACROS-//////////////////////////////////////////////////////////////////////////

`include "uvm_macros.svh"
import uvm_pkg::*;
 
 
class array extends uvm_object;
  
  ////////static array
  int arr1[3] = {1,2,3};
  
  ///////Dynamic array
  int arr2[];
  
  ///////Queue
  int arr3[$];
  
  ////////Associative array
  int arr4[int];
  
  
  
  function new(string path = "array");
    super.new(path);
  endfunction 
  
  `uvm_object_utils_begin(array)
  `uvm_field_sarray_int(arr1, UVM_DEFAULT);
  `uvm_field_array_int(arr2, UVM_DEFAULT);
  `uvm_field_queue_int(arr3, UVM_DEFAULT);
  `uvm_field_aa_int_int(arr4, UVM_DEFAULT);
  `uvm_object_utils_end
  
  task run();
    
    ///////////////////Dynamic array value update
    arr2 = new[3];
    arr2[0] = 2;
    arr2[1] = 2;
    arr2[2] = 2;
    
    ///////////////////Queue
    arr3.push_front(3);
    arr3.push_front(3);
    
    ////////////////////Associative arrays
    arr4[1] = 4;
    arr4[2] = 4;
    arr4[3] = 4;
    arr4[4] = 4;
    
  endtask
  
endclass

 
module tb;
  array a;
  
  initial begin
    a = new("array");
    a.run();
    a.print();
  end
  
endmodule              
